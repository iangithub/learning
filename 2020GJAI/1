
class Net(nn.Module):
    def __init__(self):
        super(Net, self).__init__()
        
        #Conv2d 二維卷積 一般用於二維圖像
        self.conv1 = nn.Conv2d(3, 6, 5) #卷積層：input 3通道(RGB)的圖片，output feature maps，卷積核5x5
        self.pool1 = nn.MaxPool2d(2, 2) #池化層 卷積核大小2X2,步長為2 (輸入30X30，輸出15X15)
        
        self.conv2 = nn.Conv2d(6, 16, 5) #卷積層：input 6張特徵圖(上一層out數)，output feature maps，卷積核5x5
       
       
        
        self.fc1 = torch.nn.Linear(16*5*5,120) #上一層的output
        self.fc2 = torch.nn.Linear(120,84)
        self.fc3 = torch.nn.Linear(84,10)

    def forward(self, x):
        x = self.pool1(F.relu(self.conv1(x)))
        x = self.pool1(F.relu(self.conv2(x)))
        #print(x.shape)
        x = x.view(-1,16*5*5) # 攤平 print(x.shape) how to set?
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        #x = F.softmax(self.fc3(x))
        x = self.fc3(x)
        return x
    
#=================================== 定義卷積神經網絡 CNN end ============================================
